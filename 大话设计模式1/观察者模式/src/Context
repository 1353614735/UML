观察者模式
观察者模式observer：定义了一种一对多的依赖关系，让多个观察者对象同时监听某个主题对象。这个主题对象在状态发生变化时，
让通知所有观察者对象，使他们能够自动更新自己。
将一个系统分割成一系列相互协作的类有一个很不好的副作用，那就是需要维护相关对象间的一致性。
我们不希望为了维持一致性而使各类紧密耦合，这会给维护、扩展和重用都带来不便。
当一个对象的改变需要同时改变其他对象。而且它不知道具体有多少对象有待改变时，应该考虑使用观察者模式，
当一个抽象模式有两个方面，其中一方面依赖于另一方面，这时用观察者模式可以将这两者封装在独立的对象中使他们各自独立地改变和复用。
观察者模式所做的工作其实就是在解除耦合，让耦合的双方都依赖与抽象，而不是依赖于具体。
从而使得各自的变化都不会影响另一边的变化。
委托是一种引用方法的类型。一旦为委托分配了方法，委托将与该方法具有完全相同的行为。
委托方法的使用可以向其他任何方法一样，具有参数和返回值。委托可以看做是对函数的抽象，是函数的l’类’，
委托的实例将代表一个具体的函数。
一个委托可以搭载多个方法，所有方法被依次唤起。可以使得委托对象所搭载的方法并不需要属于同一个类。
